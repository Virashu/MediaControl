export async function getUpdate(): Promise<Update | null> {
	const status = await _player?.getStatus();
		const update = {
			provider: "WinPlayer",
			metadata: {
				title: status.metadata.title,
				album: status.metadata.album ?? "",
				albumArtist: status.metadata.albumArtist,
				albumArtists: status.metadata.albumArtists,
				artist: status.metadata.artist,
				artists: status.metadata.artists,
				artUrl: undefined,
				artData: undefined,
				length: status.metadata.length,
				count: undefined,
				lyrics: undefined,
				id: status.metadata.id ?? "",
				location: undefined
			},
			capabilities: status.capabilities,
			status: status.status,
			loop: status.isLoop,
			shuffle: status.shuffle,
			volume: status.volume,
			elapsed: status.elapsed ?? { howMuch: 0, when: new Date(0)},
			app: status.app ?? "",
			appName: status.app ? await getFriendlyNameFor(status.app) ?? status.app ?? "" : status.app ?? ""
		};

		if (status.metadata?.artData)
				const palettebuffer = await sharp(status.metadata.artData.data)
					.resize(512, 512, { withoutEnlargement: true })
					.png()
					.toBuffer();
				const palette = await (new Vibrant(palettebuffer, {
					colorCount: 16,
					quality: 1
				})).getPalette();
				if (palette) {

					update.metadata.artData = {
						data: status.metadata.artData.data,
						type: [
							status.metadata.artData.mimetype
						],
						palette: {
							DarkMuted: palette.DarkMuted?.hex,
							DarkVibrant: palette.DarkVibrant?.hex,
							LightMuted: palette.LightMuted?.hex,
							LightVibrant: palette.LightVibrant?.hex,
							Muted: palette.Muted?.hex,
							Vibrant: palette.Vibrant?.hex,
						}
					};
				}

####################################################

update = {
	metadata: {
			length: status.metadata.length,
			count: undefined,
			id: status.metadata.id ?? "",
			location: undefined
	},
		capabilities: status.capabilities,
		volume: status.volume,
		elapsed: status.elapsed ?? { howMuch: 0, when: new Date(0)},
};